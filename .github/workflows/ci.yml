name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: ["**"]
  
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Install Conan
        id: conan
        uses: turtlebrowser/get-conan@main
        with:
          version: 2.3.2

      - name: Configure conan profile
        shell: bash
        run: |
          conan profile detect
          conan profile show

      - name: Fetch up-zenoh-example-cpp conan recipe
        uses: actions/checkout@v4
        with:
          path: up-zenoh-example-cpp
          repository: eclipse-uprotocol/up-zenoh-example-cpp

      - name: Fetch up-cpp conan recipe
        uses: actions/checkout@v4
        with:
          path: up-conan-recipes
          repository: eclipse-uprotocol/up-conan-recipes

      - name: Build up-core-api conan recipe
        shell: bash
        run: |
          conan create --version 1.6.0 up-conan-recipes/up-core-api/release

      - name: Build up-cpp conan recipe
        shell: bash
        run: |
          conan create --version 1.0.1-rc1 --build=missing up-conan-recipes/up-cpp/release

      - name: Build zenohc-tmp conan recipe
        shell: bash
        run: |
          conan create --version 1.0.0-rc4 up-conan-recipes/zenohc-tmp/prebuilt

      - name: Build zenohcpp-tmp conan recipe
        shell: bash
        run: |
          conan create --version 1.0.0-rc4 up-conan-recipes/zenohcpp-tmp/from-source

      - name: Build the project
        shell: bash
        run: |
          cd up-zenoh-example-cpp
          conan install --build=missing .
          cmake --preset conan-release -DCMAKE_EXPORT_COMPILE_COMMANDS=yes
          cd build/Release
          cmake --build . -- -j

  
  # NOTE: In GitHub repository settings, the "Require status checks to pass
  # before merging" branch protection rule ensures that commits are only merged
  # from branches where specific status checks have passed. These checks are
  # specified manually as a list of workflow job names. Thus we use this extra
  # job to signal whether all CI checks have passed.
  ci:
    name: CI status checks
    runs-on: ubuntu-latest
    needs: build
    if: always()
    steps:
      - name: Check whether all jobs pass
        run: echo '${{ toJson(needs) }}' | jq -e 'all(.result == "success")'
